task_id: "FEAT-YYYY-MM-DD-01"
title: "Task title (descriptive, 3-8 words)"
project: "TestDevRules"
priority: "high"  # high, medium, low
type: "feature"   # feature, bugfix, refactor, docs
tags: [development, automation]
status: "pending"  # pending, in_progress, completed, failed

description: |
  Detailed task description explaining:
  - What needs to be done
  - Why it's important
  - Expected outcomes

acceptance_criteria:
  - "Criterion 1: Specific, measurable requirement"
  - "Criterion 2: Specific, measurable requirement"
  - "Criterion 3: Specific, measurable requirement"

commands:
  - id: "01-setup"
    description: "Setup environment"
    exec:
      cmd: "python"
      args: ["--version"]
    cost_estimate_usd: 0.0

  - id: "02-validate"
    description: "Run validation"
    exec:
      cmd: "python"
      args: ["-m", "pytest", "tests/", "-v"]
    cost_estimate_usd: 0.0

gates:
  - id: "validation"
    description: "All tests must pass"
    exec:
      cmd: "python"
      args: ["-m", "pytest", "tests/", "-v"]

  - id: "human-review"
    description: "Human approval required"
    # Requires: echo '<hash>' > RUNS/TASK-ID/.human_approved

evidence:
  - "README.md"
  - "docs/*.md"
  - "RUNS/*/provenance.json"

# Security
secrets_required: []  # e.g., ["API_KEY", "SECRET_KEY"]
locks: []  # e.g., ["deployment", "database"]
ports_should_be_free: []  # e.g., [8000, 8003]

# Telemetry
telemetry:
  cost_budget_usd: 10.0
  cost_warn_threshold: 0.8  # Warn at 80%
  cost_hard_limit: true

# Provenance (auto-updated by TaskExecutor)
provenance:
  evidence_sha256: {}
  executed_at: ""
  executor: "TaskExecutor-v3.2.1"
  git_commit: ""

# Obsidian sync (optional)
skip_obsidian_sync: false
