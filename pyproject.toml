[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "dev-rules-starter-kit"
version = "1.1.0"
description = "Development rules and automation system for Python projects"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Dev Rules Contributors"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "watchdog>=3.0.0",
    "pyyaml>=6.0",
    "ruff>=0.1.0",
    "tomli>=2.0.0; python_version<'3.11'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[tool.dev-assistant]
# Development Assistant Configuration
# File watcher with automatic Ruff verification and evidence logging

# Enable/disable the assistant
enabled = true

# Directories to watch for Python file changes
watch_paths = ["scripts", "tests"]

# Debounce time in milliseconds (avoid processing rapid successive changes)
debounce_ms = 500

# Ruff verification timeout in seconds
verification_timeout_sec = 2.0

# Evidence log retention in days
log_retention_days = 7

# Enable Ruff code verification
enable_ruff = true

# Enable automatic evidence logging
enable_evidence = true

# Phase C: Cache configuration
cache_enabled = true
cache_ttl_seconds = 300
cache_max_entries = 1000

# Phase C: Critical file detection
criticality_threshold = 0.5
critical_patterns = [
    "*_executor.py",
    "*_validator.py",
    "constitutional_*.py",
    "*_guard.py",
    "*_steering.py",
    "project_*.py"
]

[tool.ruff]
# Import from existing ruff.toml if present
extend = "ruff.toml"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--verbose",
    "--strict-markers",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "benchmark: marks tests as performance benchmarks",
]
